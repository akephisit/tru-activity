steps:
  # Build the frontend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/tru-activity-frontend:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/tru-activity-frontend:latest'
      - '.'

  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/tru-activity-frontend:$BUILD_ID'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/tru-activity-frontend:latest'

  # Get backend URL and deploy frontend
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        echo "Getting backend service URL..."
        
        # Get the actual backend service URL
        BACKEND_URL=$(gcloud run services describe tru-activity-backend \
          --region=$_REGION \
          --format="value(status.url)" 2>/dev/null) || {
          echo "Warning: Backend service not found, using localhost fallback"
          BACKEND_URL="http://localhost:8080"
        }
        
        echo "Backend URL: $BACKEND_URL"
        echo "Preparing frontend service.yaml with backend URL..."
        
        # Create service.yaml with actual backend URL
        sed -e "s/\$PROJECT_ID/$PROJECT_ID/g" \
            -e "s|\$_BACKEND_URL|$BACKEND_URL|g" \
            service.yaml > /tmp/frontend-service.yaml
        
        echo "GraphQL URL: $BACKEND_URL/query"
        
        # Deploy frontend
        gcloud run services replace /tmp/frontend-service.yaml --region=$_REGION
        
        # Update with current build image
        gcloud run services update tru-activity-frontend \
          --image=gcr.io/$PROJECT_ID/tru-activity-frontend:$BUILD_ID \
          --region=$_REGION
    env:
      - 'PROJECT_ID=$PROJECT_ID'
      - 'REGION=$_REGION'


# Store images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/tru-activity-frontend:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/tru-activity-frontend:latest'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  substitutionOption: 'ALLOW_LOOSE'
  logging: CLOUD_LOGGING_ONLY

# Substitutions
substitutions:
  _REGION: 'asia-southeast1'

# Timeout
timeout: '1200s'